package mocks

import gin "gopkg.in/gin-gonic/gin.v1"
import handlers "github.com/jakelong95/TownCenter/handlers"
import mock "github.com/stretchr/testify/mock"

// ResetI is an autogenerated mock type for the ResetI type
type ResetI struct {
	mock.Mock
}

// Fulfill provides a mock function with given fields: ctx
func (_m *ResetI) Fulfill(ctx *gin.Context) {
	_m.Called(ctx)
}

// Get provides a mock function with given fields: ctx
func (_m *ResetI) Get(ctx *gin.Context) {
	_m.Called(ctx)
}

// GetJWT provides a mock function with given fields:
func (_m *ResetI) GetJWT() gin.HandlerFunc {
	ret := _m.Called()

	var r0 gin.HandlerFunc
	if rf, ok := ret.Get(0).(func() gin.HandlerFunc); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gin.HandlerFunc)
		}
	}

	return r0
}

// Request provides a mock function with given fields: ctx
func (_m *ResetI) Request(ctx *gin.Context) {
	_m.Called(ctx)
}

// Time provides a mock function with given fields:
func (_m *ResetI) Time() gin.HandlerFunc {
	ret := _m.Called()

	var r0 gin.HandlerFunc
	if rf, ok := ret.Get(0).(func() gin.HandlerFunc); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gin.HandlerFunc)
		}
	}

	return r0
}

var _ handlers.ResetI = (*ResetI)(nil)
